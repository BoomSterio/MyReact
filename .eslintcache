[{"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\index.js":"1","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\app-reducer.ts":"2","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\auth-reducer.ts":"3","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Feed\\Feed.jsx":"4","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\Paginator\\Paginator.tsx":"5","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\users-reducer.ts":"6","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Users\\Users.tsx":"7","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\dialogs-reducer.ts":"8","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\profile-reducer.ts":"9","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\reportWebVitals.js":"10","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Groups\\Groups.jsx":"11","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Music\\Music.jsx":"12","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Settings\\Settings.jsx":"13","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\redux-store.ts":"14","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\users-selectors.ts":"15","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\api.ts":"16","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Login\\Login.tsx":"17","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\utils\\validators\\validators.ts":"18","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\users-api.ts":"19","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\profile-api.ts":"20","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\auth-api.ts":"21","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\security-api.ts":"22","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\Forms\\FormsControls.tsx":"23","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\Dialogs.tsx":"24","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\utils\\objects-helpers.ts":"25","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\Messages\\Messages.tsx":"26","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\Messages\\MessageForm\\MessageForm.tsx":"27","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\App.tsx":"28","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\hoc\\withSuspence.tsx":"29","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\hoc\\withAuthRedirect.tsx":"30","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Users\\UserItem\\UserItem.tsx":"31","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileContainer.tsx":"32","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\Profile.tsx":"33","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"34","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusWithHooks.tsx":"35","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileAboutForm\\ProfileAboutForm.tsx":"36","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileAbout\\ProfileAbout.tsx":"37","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"38","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\IconLink\\IconLink.tsx":"39","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\MyPosts\\PostForm\\PostForm.tsx":"40","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"41","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Navbar\\Navbar.tsx":"42","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Header\\Header.tsx":"43","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\Preloader\\Preloader.tsx":"44","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"45","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\Messages\\MessageItem\\Message.tsx":"46","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Users\\UsersSearchForm\\UsersSearchForm.tsx":"47","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\PMedia\\PMedia.tsx":"48","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\PMedia\\FriendsBanner\\FriendsBanner.tsx":"49","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Login\\LoginForm.tsx":"50","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\auth-selectors.ts":"51","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\pages\\Chats\\Chats.tsx":"52","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\PMedia\\PhotosBanner\\PhotosBanner.tsx":"53","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\Ads\\Ad.tsx":"54","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\FollowingButton\\FollowingButton.tsx":"55","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\chat-reducer.ts":"56","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\chat-api.ts":"57","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\LikeButton\\LikeButton.tsx":"58","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfilePicture\\ProfilePicture.tsx":"59","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\profile-selectors.ts":"60"},{"size":253,"mtime":1612288722620,"results":"61","hashOfConfig":"62"},{"size":1037,"mtime":1611160222349,"results":"63","hashOfConfig":"62"},{"size":3339,"mtime":1611160222503,"results":"64","hashOfConfig":"62"},{"size":118,"mtime":1611160117799,"results":"65","hashOfConfig":"62"},{"size":1486,"mtime":1611160118644,"results":"66","hashOfConfig":"62"},{"size":4870,"mtime":1611579776946,"results":"67","hashOfConfig":"62"},{"size":3839,"mtime":1611579727469,"results":"68","hashOfConfig":"62"},{"size":3503,"mtime":1612453872649,"results":"69","hashOfConfig":"62"},{"size":7308,"mtime":1612744355459,"results":"70","hashOfConfig":"62"},{"size":362,"mtime":499162500000,"results":"71","hashOfConfig":"62"},{"size":750,"mtime":1609873597158,"results":"72","hashOfConfig":"62"},{"size":123,"mtime":1608652516398,"results":"73","hashOfConfig":"62"},{"size":136,"mtime":1608652504990,"results":"74","hashOfConfig":"62"},{"size":1338,"mtime":1612445404897,"results":"75","hashOfConfig":"62"},{"size":921,"mtime":1611160320543,"results":"76","hashOfConfig":"62"},{"size":608,"mtime":1611160117583,"results":"77","hashOfConfig":"62"},{"size":1037,"mtime":1611160118254,"results":"78","hashOfConfig":"62"},{"size":633,"mtime":1609977021781,"results":"79","hashOfConfig":"62"},{"size":879,"mtime":1611579600144,"results":"80","hashOfConfig":"62"},{"size":1050,"mtime":1611160118273,"results":"81","hashOfConfig":"62"},{"size":847,"mtime":1611160117895,"results":"82","hashOfConfig":"62"},{"size":237,"mtime":1611160117654,"results":"83","hashOfConfig":"62"},{"size":909,"mtime":1611160118074,"results":"84","hashOfConfig":"62"},{"size":845,"mtime":1610897147734,"results":"85","hashOfConfig":"62"},{"size":261,"mtime":1610189387802,"results":"86","hashOfConfig":"62"},{"size":1164,"mtime":1611160117969,"results":"87","hashOfConfig":"62"},{"size":1228,"mtime":1612740382950,"results":"88","hashOfConfig":"62"},{"size":4413,"mtime":1612739982863,"results":"89","hashOfConfig":"62"},{"size":376,"mtime":1611160222485,"results":"90","hashOfConfig":"62"},{"size":876,"mtime":1610209529955,"results":"91","hashOfConfig":"62"},{"size":2487,"mtime":1612741571951,"results":"92","hashOfConfig":"62"},{"size":4467,"mtime":1612746665356,"results":"93","hashOfConfig":"62"},{"size":1486,"mtime":1612746304832,"results":"94","hashOfConfig":"62"},{"size":3755,"mtime":1612793079886,"results":"95","hashOfConfig":"62"},{"size":1568,"mtime":1612290883069,"results":"96","hashOfConfig":"62"},{"size":2803,"mtime":1611160118390,"results":"97","hashOfConfig":"62"},{"size":1889,"mtime":1612718304401,"results":"98","hashOfConfig":"62"},{"size":1446,"mtime":1611599335862,"results":"99","hashOfConfig":"62"},{"size":1477,"mtime":1611160118299,"results":"100","hashOfConfig":"62"},{"size":852,"mtime":1612290294551,"results":"101","hashOfConfig":"62"},{"size":2967,"mtime":1612710389407,"results":"102","hashOfConfig":"62"},{"size":4246,"mtime":1612731856981,"results":"103","hashOfConfig":"62"},{"size":3609,"mtime":1612731404205,"results":"104","hashOfConfig":"62"},{"size":240,"mtime":1611160118045,"results":"105","hashOfConfig":"62"},{"size":578,"mtime":1610241484072,"results":"106","hashOfConfig":"62"},{"size":342,"mtime":1611160118058,"results":"107","hashOfConfig":"62"},{"size":2295,"mtime":1612474958726,"results":"108","hashOfConfig":"62"},{"size":541,"mtime":1612705773578,"results":"109","hashOfConfig":"62"},{"size":2039,"mtime":1612734205333,"results":"110","hashOfConfig":"62"},{"size":6095,"mtime":1612480037882,"results":"111","hashOfConfig":"62"},{"size":324,"mtime":1612746305059,"results":"112","hashOfConfig":"62"},{"size":4900,"mtime":1612740278012,"results":"113","hashOfConfig":"62"},{"size":1462,"mtime":1612741856878,"results":"114","hashOfConfig":"62"},{"size":698,"mtime":1611066620613,"results":"115","hashOfConfig":"62"},{"size":867,"mtime":1611098114220,"results":"116","hashOfConfig":"62"},{"size":2771,"mtime":1612452164393,"results":"117","hashOfConfig":"62"},{"size":2900,"mtime":1612451957701,"results":"118","hashOfConfig":"62"},{"size":665,"mtime":1611688037026,"results":"119","hashOfConfig":"62"},{"size":1836,"mtime":1612743069413,"results":"120","hashOfConfig":"62"},{"size":670,"mtime":1612746304960,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"pdt0ui",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"127"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"127"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"127"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"127"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"127"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"127"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"127"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"127"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"127"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"127"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\index.js",[],["257","258"],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\app-reducer.ts",[],["259","260"],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\auth-reducer.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Feed\\Feed.jsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\Paginator\\Paginator.tsx",[],["261","262"],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\users-reducer.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Users\\Users.tsx",["263","264"],"import UserItem from './UserItem/UserItem'\r\nimport st from './Users.module.css'\r\nimport React, {FC, useEffect} from 'react'\r\nimport UsersSearchForm from './UsersSearchForm/UsersSearchForm'\r\nimport {FilterType, follow, requestUsers, unfollow} from '../../redux/users-reducer'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from '../../redux/users-selectors'\r\nimport {useHistory} from 'react-router-dom'\r\nimport * as queryString from 'querystring'\r\nimport {Pagination} from 'antd'\r\n\r\ntype Props = {}\r\n\r\ntype QueryType = { term?: string; page?: string; friend?: string }\r\n\r\nconst Users: FC<Props> = (props) => {\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getIsFollowingInProgress)\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryType\r\n\r\n        let actualPage = currentPage\r\n        if (parsed.page)\r\n            actualPage = Number(parsed.page)\r\n\r\n        let actualFilter = filter\r\n        if (parsed.term)\r\n            actualFilter = {...actualFilter, term: parsed.term as string}\r\n        if (parsed.friend)\r\n            actualFilter = {\r\n                ...actualFilter,\r\n                friend: parsed.friend === 'null' ? null : parsed.friend === 'true' ? true : false\r\n            }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryType = {}\r\n\r\n        if (filter.term)\r\n            query.term = filter.term\r\n        if (filter.friend !== null)\r\n            query.friend = String(filter.friend)\r\n        if (currentPage !== 1)\r\n            query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageSelector = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    const onFollow = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n    const onUnfollow = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n\r\n    const usersElements = users.map(u => <UserItem\r\n        user={u} key={u.id}\r\n        followingInProgress={followingInProgress}\r\n        follow={onFollow} unfollow={onUnfollow}/>)\r\n\r\n    return (\r\n        <div className={st.usersPage}>\r\n            <UsersSearchForm filter={filter} onFilterChanged={onFilterChanged}/>\r\n            <div className={st.paginator}>\r\n                <Pagination showQuickJumper showSizeChanger={false} defaultCurrent={1} current={currentPage}\r\n                            total={totalUsersCount} onChange={onPageSelector} pageSize={pageSize}/>\r\n            </div>\r\n            <div>\r\n                {isFetching ? <Preloader/> : null}\r\n                {usersElements}\r\n            </div>\r\n            <div className={st.paginator}>\r\n                <Pagination showQuickJumper showSizeChanger={false} defaultCurrent={1} current={currentPage}\r\n                            total={totalUsersCount} onChange={onPageSelector} pageSize={pageSize}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Users","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\dialogs-reducer.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\profile-reducer.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\reportWebVitals.js",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Groups\\Groups.jsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Music\\Music.jsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Settings\\Settings.jsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\redux-store.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\users-selectors.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\api.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Login\\Login.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\utils\\validators\\validators.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\users-api.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\profile-api.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\auth-api.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\security-api.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\Forms\\FormsControls.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\Dialogs.tsx",["265","266"],"import st from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {InitialStateType} from \"../../redux/dialogs-reducer\";\r\nimport React from \"react\";\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\ntype Props = {\r\n}\r\n\r\nconst Dialogs: React.FC<Props> = (props) => {\r\n    const state = useSelector((state: AppStateType) => state.dialogsPage)\r\n\r\n    const dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} img={d.img} key={d.id} id={d.id}/>);\r\n\r\n    return (\r\n        <div className={st.dialogs}>\r\n            <div className={st.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={st.messages}>\r\n                <Messages messages={state.messages}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\utils\\objects-helpers.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\Messages\\Messages.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\Messages\\MessageForm\\MessageForm.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\App.tsx",["267"],"import React from 'react'\nimport {connect, Provider} from 'react-redux'\nimport {compose} from 'redux'\nimport './App.css'\nimport 'antd/dist/antd.dark.css'\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom'\nimport Navbar from './components/Navbar/Navbar'\nimport Music from './components/Music/Music'\nimport Settings from './components/Settings/Settings'\nimport Groups from './components/Groups/Groups'\nimport Feed from './components/Feed/Feed'\nimport Dialogs from './components/Dialogs/Dialogs'\nimport Header from './components/Header/Header'\nimport Login from './components/Login/Login'\nimport {initializeApp} from './redux/app-reducer'\nimport Preloader from './components/common/Preloader/Preloader'\nimport store, {AppStateType} from './redux/redux-store'\nimport {withSuspence} from './hoc/withSuspence'\nimport {Breadcrumb, Layout} from 'antd'\nimport Chats from './pages/Chats/Chats'\n\nconst {Content, Footer} = Layout\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\nconst UsersPage = React.lazy(() => import('./components/Users/Users'))\nconst SuspendedUsersPage = withSuspence(UsersPage)\nconst SuspendedProfilePage = withSuspence(ProfileContainer)\n\ntype StateProps = ReturnType<typeof mapStateToProps>\ntype DispatchProps = {\n    initializeApp: () => void\n}\n\n/*const breadcrumbNameMap = {\n    '/apps': 'Application List',\n    '/apps/1': 'Application1',\n    '/apps/2': 'Application2',\n    '/apps/1/detail': 'Detail',\n    '/apps/2/detail': 'Detail',\n};*/\n\n//todo: change color scheme\nclass App extends React.Component<StateProps & DispatchProps> {\n    catchUnhandledErrors = (promiseRejectionEvent: PromiseRejectionEvent) => {\n        console.error(promiseRejectionEvent)\n    }\n\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener('unhandledrejection', this.catchUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <Layout>\n                <Header/>\n                <Content style={{padding: '0 2%'}}>\n                    {/*<Breadcrumb style={{margin: '16px 0'}}>\n                        todo: implement breadcrumbs\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\n                    </Breadcrumb>*/}\n                    <Layout style={{padding: '2% 0'}}>\n                        <Navbar/>\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\n                            <Switch>\n                                <Redirect exact from=\"/\" to=\"/profile\"/>\n                                <Route path=\"/profile/:userId?\" render={() => <SuspendedProfilePage/>}/>\n                                <Route path=\"/dialogs\" render={() => <Dialogs/>}/>\n                                <Route path=\"/chats\" render={() => <Chats/>}/>\n                                <Route path=\"/feed\" render={() => <Feed/>}/>\n                                <Route path=\"/users\" render={() => <SuspendedUsersPage/>}/>\n                                <Route path=\"/groups\" render={() => <Groups/>}/>\n                                <Route path=\"/music\" render={() => <Music/>}/>\n                                <Route path=\"/settings\" render={() => <Settings/>}/>\n                                <Route path=\"/login\" render={() => <Login/>}/>\n                                <Route path=\"*\" render={() => <div>404<br/>PAGE NOT FOUND</div>}/>\n                            </Switch>\n                        </Content>\n                    </Layout>\n                </Content>\n                <Footer style={{textAlign: 'center'}}>WorkBook ©2021 All rights reserved</Footer>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({initialized: state.app.initialized})\n\nlet AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App)\n\nconst MainApp: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default MainApp\n","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\hoc\\withSuspence.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\hoc\\withAuthRedirect.tsx",[],["268","269"],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Users\\UserItem\\UserItem.tsx",["270"],"import st from './UserItem.module.css'\r\nimport userPfp from '../../../assets/images/user.jpg'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport {UserType} from '../../../types/types'\r\nimport React from 'react'\r\nimport {Col, Row} from 'antd'\r\nimport FollowingButton from '../../common/FollowingButton/FollowingButton'\r\nimport user from '../../../assets/images/user.jpg'\r\nimport {Image} from 'react-bootstrap'\r\n\r\ntype Props = {\r\n    user: UserType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst UserItem: React.FC<Props> = ({user, follow, unfollow, followingInProgress}) => {\r\n    return (\r\n        <div className={st.user} key={user.id}>\r\n            <Row gutter={[16, 8]}>\r\n                <Col span={2} xs={5} sm={4} md={3} lg={2}>\r\n                    <div className={st.avatar}>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <Image className={'img-fluid'} src={(user.photos.small == null) ? userPfp : user.photos.small} alt={'userPfp'} roundedCircle/>\r\n                        </NavLink>\r\n                    </div>\r\n                </Col>\r\n                <Col span={8} xs={5} sm={6} md={7} lg={8}>\r\n                    <div className={st.info}>\r\n                        <Link to={'/profile/' + user.id}>\r\n                            <span className={st.fullName}>{user.name}</span>\r\n                        </Link>\r\n                        <div className={st.status}>\r\n                            {user.status}\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col span={14}>\r\n                    <div className={st.location}>\r\n                        {/*todo: for future API updates*/}\r\n                        <div>{'user.location.country'}</div>\r\n                        <div>{'user.location.city'}</div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 16]}>\r\n                <Col span={2}>\r\n                    <div>\r\n                        <FollowingButton followed={user.followed}\r\n                                         isFollowingInProgress={followingInProgress.some((id: number) => id === user.id)}\r\n                                         id={user.id} handleFollow={follow} handleUnfollow={unfollow}/>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserItem","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileContainer.tsx",["271","272","273","274"],"import React, {useEffect} from 'react'\r\nimport Profile from './Profile'\r\nimport {connect, useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    fetchingStarted,\r\n    getFollowStatus,\r\n    getStatus,\r\n    getUserProfile,\r\n    savePhoto,\r\n    saveProfileInfo,\r\n    updateStatus\r\n} from '../../redux/profile-reducer'\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {ProfileType} from '../../types/types'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {getFetched, getFollowed, getProfile, getUserStatus} from '../../redux/profile-selectors'\r\nimport {getAuthorizedUserId, getIsAuth} from '../../redux/auth-selectors'\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    getFollowStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfileInfo: (profile: ProfileType) => Promise<any>,\r\n    fetchingStarted: () => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype Props = MapDispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\n/*class ProfileContainer extends React.Component<Props> {\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                //todo: replace push with Redirect\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error('User id should exist in state or URL params. UserId not found')\r\n        } else {\r\n            this.props.fetchingStarted()\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n            this.props.getFollowStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: Props) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.fetched) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId} profile={this.props.profile}\r\n                     followed={this.props.followed}\r\n                     status={this.props.status} updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}*/\r\n\r\nconst ProfileContainer: React.FC<Props> = (props) => {\r\n    const profile = useSelector(getProfile)\r\n    const status = useSelector(getUserStatus)\r\n    const followed = useSelector(getFollowed)\r\n    const fetched = useSelector(getFetched)\r\n    const authorizedUserId = useSelector(getAuthorizedUserId)\r\n    const isAuth = useSelector(getIsAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function refreshProfile() {\r\n        let userId: number | null = +props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = authorizedUserId\r\n            if (!userId) {\r\n                //todo: replace push with Redirect\r\n                props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error('User id should exist in state or URL params. UserId not found')\r\n        } else {\r\n            dispatch(fetchingStarted())\r\n            dispatch(getUserProfile(userId))\r\n            dispatch(getStatus(userId))\r\n            dispatch(getFollowStatus(userId))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [props.match.params.userId])\r\n\r\n    if (!fetched) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <Profile {...props} isOwner={!props.match.params.userId} profile={profile}\r\n                 followed={followed}\r\n                 status={status} updateStatus={props.updateStatus}\r\n                 savePhoto={props.savePhoto}/>\r\n    )\r\n\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    //withAuthRedirect,\r\n    withRouter,\r\n    connect(null, {\r\n        getUserProfile,\r\n        getStatus,\r\n        getFollowStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfileInfo,\r\n        fetchingStarted\r\n    }),\r\n)(ProfileContainer)\r\n\r\n","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\Profile.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["275","276","277"],"import st from './ProfileInfo.module.css'\r\nimport userPfp from '../../../assets/images/user.jpg'\r\nimport sunrise from '../../../assets/images/sunrise.png'\r\nimport download from '../../../assets/images/download.png'\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport React, {ChangeEvent, useState} from 'react'\r\nimport ProfileAboutForm from './ProfileAboutForm/ProfileAboutForm'\r\nimport ProfileAbout from './ProfileAbout/ProfileAbout'\r\nimport {ProfileType} from '../../../types/types'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {follow, unfollow} from '../../../redux/profile-reducer'\r\nimport {AppStateType} from '../../../redux/redux-store'\r\nimport FollowingButton from '../../common/FollowingButton/FollowingButton'\r\nimport ProfilePicture from './ProfilePicture/ProfilePicture'\r\n\r\ntype Props = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    status: string\r\n    followed: boolean\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfileInfo: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\nconst ProfileInfo: React.FC<Props> = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const isFollowingInProgress = useSelector((state: AppStateType) => state.profilePage.isFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const followUser = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n    const unfollowUser = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        // todo: remove .then\r\n        props.saveProfileInfo(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    const onProfilePhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={st.profileInfo}>\r\n            <div className={st.banner}>\r\n                <img\r\n                    src={'https://picsum.photos/3840/2160'}\r\n                    alt=\"pfBanner\"\r\n                />\r\n            </div>\r\n            <div className={props.isOwner ? st.myPfp : st.pfp}>\r\n                <ProfilePicture isOwner={props.isOwner} photo={props.profile.photos.large}\r\n                                onProfilePhotoSelected={onProfilePhotoSelected} />\r\n            </div>\r\n            {editMode ?\r\n                <ProfileAboutForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                :\r\n                <div>\r\n                    <div className={props.isOwner ? st.myInfo : st.info}>\r\n                        <div className={st.fullName}>{props.profile.fullName}</div>\r\n                        <ProfileStatusWithHooks isOwner={props.isOwner} status={props.status}\r\n                                                updateStatus={props.updateStatus}/>\r\n                        {!props.isOwner &&\r\n                        <div>\r\n                            <FollowingButton followed={props.followed} isFollowingInProgress={isFollowingInProgress}\r\n                                             id={props.profile.userId} handleFollow={followUser}\r\n                                             handleUnfollow={unfollowUser}/>\r\n                        </div>}\r\n                    </div>\r\n                    <ProfileAbout profile={props.profile} isOwner={props.isOwner} goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusWithHooks.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileAboutForm\\ProfileAboutForm.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileAbout\\ProfileAbout.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\IconLink\\IconLink.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\MyPosts\\PostForm\\PostForm.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Header\\Header.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\Preloader\\Preloader.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Dialogs\\Messages\\MessageItem\\Message.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Users\\UsersSearchForm\\UsersSearchForm.tsx",["278","279"],"import {Field, Form, Formik} from 'formik'\r\nimport AntdField from 'formik-antd/es/input'\r\nimport 'formik-antd/es/field/style'\r\nimport st from './UsersSearchForm.module.css'\r\nimport React from 'react'\r\nimport {FilterType} from '../../../redux/users-reducer'\r\nimport {Button, Tabs} from 'antd'\r\nimport {Radio} from 'formik-antd'\r\n\r\nconst {TabPane} = Tabs\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FriendFormType = 'null' | 'true' | 'false'\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\n\r\ntype Props = {\r\n    filter: FilterType\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nconst UsersSearchForm: React.FC<Props> = React.memo((props) => {\r\n    const {filter} = props\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const newFilter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(newFilter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <Formik enableReinitialize\r\n                initialValues={{term: String(filter.term), friend: String(filter.friend) as FriendFormType}}\r\n                validate={usersSearchFormValidate} onSubmit={submit}>\r\n            {({isSubmitting}) => (\r\n                <Form className={st.filters}>\r\n                    <Radio.Group name={'friend'}>\r\n                        <Radio.Button id={'allUsers'} value={'null'}>\r\n                            All users\r\n                        </Radio.Button>\r\n                        <Radio.Button id={'friends'} value={'true'}>\r\n                            Following\r\n                        </Radio.Button>\r\n                        <Radio.Button id={'notFriends'} value={'false'}>\r\n                            Not following\r\n                        </Radio.Button>\r\n                    </Radio.Group>\r\n                    <AntdField className={st.usersSearch} type={'text'} name={'term'}/>\r\n                    <Button type={'primary'} htmlType='submit' loading={isSubmitting}>Apply</Button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n\r\nexport default UsersSearchForm","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\PMedia\\PMedia.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\PMedia\\FriendsBanner\\FriendsBanner.tsx",["280"],"import st from './FriendsBanner.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getTotalUsersCount, getUsers} from '../../../../redux/users-selectors'\r\nimport React, {useEffect} from 'react'\r\nimport {requestUsers} from '../../../../redux/users-reducer'\r\nimport {Button, Col, Row} from 'antd'\r\nimport user from '../../../../assets/images/user.jpg'\r\nimport {Image} from 'react-bootstrap'\r\n\r\ntype Props = {}\r\n\r\nconst FriendsBanner: React.FC<Props> = (props) => {\r\n    const totalFriendsCount = useSelector(getTotalUsersCount)\r\n    const users = useSelector(getUsers)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers(1, 6, {term: '', friend: true}))\r\n    }, [])\r\n\r\n    const usersElementsRow1 = users.slice(-3).map((u) => (\r\n        <Col span={8} className={st.icon} key={u.id}>\r\n            <NavLink to={'/profile/' + u.id}>\r\n                <img src={u.photos.small ? u.photos.small : user} alt={'friend'}/>\r\n            </NavLink>\r\n        </Col>\r\n    ))\r\n    const usersElementsRow2 = users.slice(0, 3).map((u) => (\r\n        <Col span={8} className={st.icon} key={u.id}>\r\n            <NavLink to={'/profile/' + u.id}>\r\n                <Image src={u.photos.small ? u.photos.small : user} alt={'friend'} roundedCircle/>\r\n            </NavLink>\r\n        </Col>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <div className={st.friendsShortcut}>\r\n                <Button>\r\n                    <NavLink to={'/users'}>Friends ({totalFriendsCount})</NavLink>\r\n                </Button>\r\n            </div>\r\n            <hr/>\r\n            <div className={st.friendsIcons}>\r\n                <Row className=\"justify-content-around\" gutter={[8, 8]}>\r\n                    {usersElementsRow1}\r\n                </Row>\r\n                <Row className=\"justify-content-around\" gutter={[8, 8]}>\r\n                    {usersElementsRow2}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsBanner","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Login\\LoginForm.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\auth-selectors.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\pages\\Chats\\Chats.tsx",["281","282","283","284"],"import React, {useEffect, useRef, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Alert, Avatar, Badge, Button, Col, Comment, Row} from 'antd'\r\nimport TextArea from 'antd/es/input/TextArea'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {sendMessage, startMessagesListening, stopMessagesListening} from '../../redux/chat-reducer'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport userPfp from '../../assets/images/user.jpg'\r\nimport {ChatMessageAPIType} from '../../api/chat-api'\r\nimport {DownOutlined, SendOutlined} from '@ant-design/icons'\r\n\r\nconst Chats: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>Chat1</li>\r\n            </ul>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const chatStatus = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {chatStatus === 'error' &&\r\n            <Alert closable showIcon message=\"WS error occured\" description=\"Please refresh the page.\" type=\"error\"/>\r\n            }\r\n            <Messages/>\r\n            <MessageForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true)\r\n    const [isAnyUnread, setIsAnyUnread] = useState(false)\r\n    const [unreadCount, setUnreadCount] = useState(0)\r\n    const [showBadge, setShowBadge] = useState(false)\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        let element = e.currentTarget\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 100) {\r\n            !isAutoScroll && setIsAutoScroll(true)\r\n            setUnreadCount(0)\r\n            setShowBadge(false)\r\n        } else {\r\n            isAutoScroll && setIsAutoScroll(false)\r\n            setShowBadge(true)\r\n        }\r\n    }\r\n\r\n    const goDown = () => {\r\n        messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUnreadCount(unreadCount + 1)\r\n        if (isAutoScroll) {\r\n            goDown()\r\n            setUnreadCount(0)\r\n        }\r\n    }, [messages])\r\n\r\n    return (\r\n        <div>\r\n            <div style={{height: '27.5vw', overflowY: 'auto',}} onScroll={scrollHandler}>\r\n                {messages.map((m) => <Message message={m} key={m.id}/>)}\r\n                <div ref={messagesAnchorRef}/>\r\n            </div>\r\n            {showBadge &&\r\n            <div style={{position: 'absolute', top: '71.5%', left: '50%'}}>\r\n                <Badge count={unreadCount}>\r\n                    <Button shape={'circle'} icon={<DownOutlined/>} onClick={goDown}/>\r\n                </Badge>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n    return (\r\n        <div style={{border: '1px solid #1f1f1f', borderWidth: '0 0 2px 0'}}>\r\n            <Comment\r\n                author={<Link to={`/profile/${message.userId}`}>\r\n                    <b>{message.userName}</b>\r\n                </Link>}\r\n                content={<p>\r\n                    {message.message}\r\n                </p>}\r\n                avatar={\r\n                    <Link to={`/profile/${message.userId}`}>\r\n                        <Avatar src={message.photo ? message.photo : userPfp} alt={'pfp'}/>\r\n                    </Link>\r\n                }/>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst MessageForm: React.FC = () => {\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    const chatStatus = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message)\r\n            return\r\n\r\n        dispatch(sendMessage(message))\r\n\r\n        setMessage('')\r\n    }\r\n\r\n    //todo: sending message on pressing CTRL+ENTER\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row>\r\n                <Col span={19}>\r\n                    <TextArea autoSize={{minRows: 3, maxRows: 5}} value={message} onChange={(e) => {\r\n                        setMessage(e.target.value)\r\n                    }}/>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Button htmlType={'submit'} loading={chatStatus !== 'ready'} icon={<SendOutlined/>}\r\n                            shape={'circle'} size={'large'} style={{width: '2.5vw', height: '2.5vw'}}\r\n                            onClick={sendMessageHandler}/>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chats","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\PMedia\\PhotosBanner\\PhotosBanner.tsx",["285"],"import st from './PhotosBanner.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport React from 'react'\r\nimport {Button, Col, Image, Row} from 'antd'\r\n\r\ntype Props = {}\r\n\r\n//todo: implement using server API\r\nconst PhotosBanner: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <div className={st.photosShortcut}>\r\n                <Button>\r\n                    <NavLink to=\"/photos\">Photos ({192})</NavLink>\r\n                </Button>\r\n            </div>\r\n            <hr/>\r\n            <div className={st.photosIcons}>\r\n                <Row className=\"justify-content-around\" gutter={[8, 8]}>\r\n                    <Col span={8} className={st.item}>\r\n                        <Image preview={{mask: ''}} src=\"https://keepgif.com/gif/face-time-netween-cats.gif\"/>\r\n                    </Col>\r\n                    <Col span={8} className={st.item}>\r\n                        <Image src=\"https://www.diggitmagazine.com/sites/default/files/styles/2_1_mobile/public/field/image/cat-haircuts-218336-16-cats-who-seriously-hate-their-stupid-haircuts-of-cat-haircuts-1.jpg?itok=AwZdhqsC&timestamp=1554147856\"/>\r\n                    </Col>\r\n                    <Col span={8} className={st.item}>\r\n                        <Image src=\"https://media1.tenor.com/images/437855c8c4fdd9903e5f324fe019f3ec/tenor.gif?itemid=18132843\"/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhotosBanner","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\Ads\\Ad.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\FollowingButton\\FollowingButton.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\chat-reducer.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\api\\chat-api.ts",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\common\\LikeButton\\LikeButton.tsx",[],"D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\components\\Profile\\ProfileInfo\\ProfilePicture\\ProfilePicture.tsx",["286","287","288","289"],"import st from './ProfilePicture.module.css'\r\nimport userPfp from '../../../../assets/images/user.jpg'\r\nimport download from '../../../../assets/images/download.png'\r\nimport React, {ChangeEvent, useState} from 'react'\r\nimport {CloseOutlined, UploadOutlined} from '@ant-design/icons'\r\nimport {Button, Image} from 'antd'\r\n\r\ntype Props = {\r\n    isOwner: boolean\r\n    photo: string | null\r\n    onProfilePhotoSelected: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst ProfilePicture: React.FC<Props> = ({photo = null, isOwner, onProfilePhotoSelected}) => {\r\n    /*const [showPreview, setShowPreview] = useState(false)\r\n\r\n    const openPicturePreview = () => {\r\n        !showPreview && setShowPreview(true)\r\n    }\r\n\r\n    const closePicturePreview = () => {\r\n        showPreview && setShowPreview(false)\r\n    }*/\r\n\r\n    const openPhotoInput = () => {\r\n        // @ts-ignore\r\n        document.getElementById('file').click()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={st.pfp}>\r\n                <Image preview={{mask: ''}} src={(photo == null) ? userPfp : photo} alt=\"pfp\"/>\r\n            </div>\r\n            {isOwner &&\r\n            <>\r\n                <input type={'file'} name={'file'} id={'file'} className={st.inputFile}\r\n                       onChange={onProfilePhotoSelected}/>\r\n                <div className={st.photoLoader}>\r\n                    <UploadOutlined onClick={openPhotoInput} className={st.inputFileButton}/>\r\n                </div>\r\n            </>}\r\n            {/*{showPreview &&\r\n            <div className={st.pfpPreview}>\r\n                <img onClick={closePicturePreview} src={(photo == null) ? userPfp : photo} alt=\"pfp\"/>\r\n                <CloseOutlined className={st.close} onClick={closePicturePreview}/>\r\n            </div>}*/}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePicture\r\n","D:\\Education\\Web\\react\\projects\\social_network\\react1\\src\\redux\\profile-selectors.ts",[],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"290","replacedBy":"294"},{"ruleId":"292","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":54,"column":8,"nodeType":"298","endLine":54,"endColumn":10,"suggestions":"299"},{"ruleId":"296","severity":1,"message":"300","line":70,"column":8,"nodeType":"298","endLine":70,"endColumn":29,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":4,"column":9,"nodeType":"304","messageId":"305","endLine":4,"endColumn":25},{"ruleId":"302","severity":1,"message":"306","line":7,"column":9,"nodeType":"304","messageId":"305","endLine":7,"endColumn":20},{"ruleId":"302","severity":1,"message":"307","line":19,"column":9,"nodeType":"304","messageId":"305","endLine":19,"endColumn":19},{"ruleId":"290","replacedBy":"308"},{"ruleId":"292","replacedBy":"309"},{"ruleId":"302","severity":1,"message":"310","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":12},{"ruleId":"302","severity":1,"message":"311","line":15,"column":9,"nodeType":"304","messageId":"305","endLine":15,"endColumn":21},{"ruleId":"302","severity":1,"message":"312","line":89,"column":11,"nodeType":"304","messageId":"305","endLine":89,"endColumn":17},{"ruleId":"296","severity":1,"message":"313","line":116,"column":8,"nodeType":"298","endLine":116,"endColumn":10,"suggestions":"314"},{"ruleId":"296","severity":1,"message":"313","line":120,"column":8,"nodeType":"298","endLine":120,"endColumn":35,"suggestions":"315"},{"ruleId":"302","severity":1,"message":"316","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":15},{"ruleId":"302","severity":1,"message":"317","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":15},{"ruleId":"302","severity":1,"message":"318","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":16},{"ruleId":"302","severity":1,"message":"319","line":1,"column":9,"nodeType":"304","messageId":"305","endLine":1,"endColumn":14},{"ruleId":"302","severity":1,"message":"320","line":10,"column":8,"nodeType":"304","messageId":"305","endLine":10,"endColumn":15},{"ruleId":"296","severity":1,"message":"321","line":21,"column":8,"nodeType":"298","endLine":21,"endColumn":10,"suggestions":"322"},{"ruleId":"296","severity":1,"message":"321","line":33,"column":8,"nodeType":"298","endLine":33,"endColumn":10,"suggestions":"323"},{"ruleId":"302","severity":1,"message":"324","line":50,"column":12,"nodeType":"304","messageId":"305","endLine":50,"endColumn":23},{"ruleId":"302","severity":1,"message":"325","line":50,"column":25,"nodeType":"304","messageId":"305","endLine":50,"endColumn":39},{"ruleId":"296","severity":1,"message":"326","line":76,"column":8,"nodeType":"298","endLine":76,"endColumn":18,"suggestions":"327"},{"ruleId":"302","severity":1,"message":"328","line":6,"column":6,"nodeType":"304","messageId":"305","endLine":6,"endColumn":11},{"ruleId":"302","severity":1,"message":"318","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":16},{"ruleId":"302","severity":1,"message":"329","line":4,"column":29,"nodeType":"304","messageId":"305","endLine":4,"endColumn":37},{"ruleId":"302","severity":1,"message":"330","line":5,"column":9,"nodeType":"304","messageId":"305","endLine":5,"endColumn":22},{"ruleId":"302","severity":1,"message":"331","line":6,"column":9,"nodeType":"304","messageId":"305","endLine":6,"endColumn":15},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],["332"],["333"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["334"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["335"],"@typescript-eslint/no-unused-vars","'InitialStateType' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'Breadcrumb' is defined but never used.",["332"],["333"],"'user' is defined but never used.","'AppStateType' is defined but never used.","'isAuth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshProfile'. Either include it or remove the dependency array.",["336"],["337"],"'userPfp' is defined but never used.","'sunrise' is defined but never used.","'download' is defined but never used.","'Field' is defined but never used.","'TabPane' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["338"],["339"],"'isAnyUnread' is assigned a value but never used.","'setIsAnyUnread' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isAutoScroll' and 'unreadCount'. Either include them or remove the dependency array. You can also do a functional update 'setUnreadCount(u => ...)' if you only need 'unreadCount' in the 'setUnreadCount' call.",["340"],"'Props' is defined but never used.","'useState' is defined but never used.","'CloseOutlined' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"349","fix":"351"},{"desc":"352","fix":"353"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"354","text":"355"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"356","text":"357"},"Update the dependencies array to be: [refreshProfile]",{"range":"358","text":"359"},"Update the dependencies array to be: [props.match.params.userId, refreshProfile]",{"range":"360","text":"361"},"Update the dependencies array to be: [dispatch]",{"range":"362","text":"363"},{"range":"364","text":"363"},"Update the dependencies array to be: [isAutoScroll, messages, unreadCount]",{"range":"365","text":"366"},[1927,1929],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2353,2374],"[filter, currentPage, history]",[3741,3743],"[refreshProfile]",[3804,3831],"[props.match.params.userId, refreshProfile]",[768,770],"[dispatch]",[1082,1084],[2505,2515],"[isAutoScroll, messages, unreadCount]"]